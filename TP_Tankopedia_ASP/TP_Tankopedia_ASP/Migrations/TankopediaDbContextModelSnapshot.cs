// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP_Tankopedia_ASP.Data;

#nullable disable

namespace TP_Tankopedia_ASP.Migrations
{
    [DbContext(typeof(TankopediaDbContext))]
    partial class TankopediaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.Characteristics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AimingTime")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("AmoCapacity")
                        .HasColumnType("int");

                    b.Property<int>("EnginePower")
                        .HasColumnType("int");

                    b.Property<int>("HullArmor")
                        .HasColumnType("int");

                    b.Property<decimal>("RateOfFire")
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("ReloadTime")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("TankId")
                        .IsUnique();

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.Nation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Nations");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.StrategicRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("imageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StrategicRoles");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.Tank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("NationID")
                        .HasColumnType("int");

                    b.Property<int>("StrategicRoleId")
                        .HasColumnType("int");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("YearOfCreation")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NationID");

                    b.HasIndex("StrategicRoleId");

                    b.HasIndex("TypeID");

                    b.ToTable("Tanks");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.TankModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.Property<string>("TypeModule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TankId");

                    b.ToTable("TankModules");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.TypeTank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("imageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeTanks");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.Characteristics", b =>
                {
                    b.HasOne("TP_Tankopedia_ASP.Models.Tank", "Tank")
                        .WithOne("Characteristics")
                        .HasForeignKey("TP_Tankopedia_ASP.Models.Characteristics", "TankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.Tank", b =>
                {
                    b.HasOne("TP_Tankopedia_ASP.Models.Nation", "Nation")
                        .WithMany("Tanks")
                        .HasForeignKey("NationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP_Tankopedia_ASP.Models.StrategicRole", "StrategicRole")
                        .WithMany("Tanks")
                        .HasForeignKey("StrategicRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP_Tankopedia_ASP.Models.TypeTank", "TypeTank")
                        .WithMany("Tanks")
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nation");

                    b.Navigation("StrategicRole");

                    b.Navigation("TypeTank");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.TankModule", b =>
                {
                    b.HasOne("TP_Tankopedia_ASP.Models.Tank", "Tank")
                        .WithMany("TankModules")
                        .HasForeignKey("TankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.Nation", b =>
                {
                    b.Navigation("Tanks");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.StrategicRole", b =>
                {
                    b.Navigation("Tanks");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.Tank", b =>
                {
                    b.Navigation("Characteristics")
                        .IsRequired();

                    b.Navigation("TankModules");
                });

            modelBuilder.Entity("TP_Tankopedia_ASP.Models.TypeTank", b =>
                {
                    b.Navigation("Tanks");
                });
#pragma warning restore 612, 618
        }
    }
}
